config {
  
  type: "incremental",
  bigquery: {
    partitionBy: "DATE(request_time)",
    updatePartitionFilter:
        "request_time >= timestamp_sub(current_timestamp(), interval 1 day)"
  },
  columns: {
    response_id: "Unique ID of each response"
  },
  uniqueKey: ["response_id"],
  description: "This is an example of a incremental MERGE only",
}

pre_operations {
    
    declare request_time_checkpoint default (
    ${when(incremental(),
    `select max(request_time) from ${self()}`,
    `select timestamp("2000-01-01")`)}
    );

}

WITH data_extract as (
SELECT  
   dfcx.request_time as request_time
  ,dfcx.project_id as project_id
  ,SPLIT(dfcx.conversation_name,'/')[SAFE_OFFSET(3)] as location
  ,dfcx.agent_id as agent_id
  ,SPLIT(dfcx.conversation_name,'/')[SAFE_OFFSET(7)] as session_id
  ,dfcx.turn_position as position
  ,JSON_VALUE(dfcx.response,'$.responseId') as response_id
  ,JSON_VALUE(dfcx.request,'$.queryInput.text.text') as user_utterance --missing dtmf digits enhancement
  ,CAST(null as string) as optional_dtmf_digits
  ,${ref('agentResponse')}(JSON_QUERY_ARRAY(dfcx.response,'$.queryResult.responseMessages')) as agent_response
  ,CAST(null as string) as agent_partial_response
  ,CAST(null as string) as source_flow
  ,CAST(SPLIT(JSON_VALUE(dfcx.request,'$.queryParams.currentPage'),'/')[SAFE_OFFSET(9)] as string) as source_page
  ,JSON_VALUE(dfcx.response,'$.queryResult.currentFlow.displayName') as flow_name
  ,JSON_VALUE(dfcx.response,'$.queryResult.currentPage.displayName') as page_name
  ,JSON_VALUE(dfcx.response,'$.queryResult.intent.displayName') as intent_display_name
  ,JSON_VALUE(dfcx.response,'$.queryResult.match.matchType') as match_type
  ,JSON_VALUE(dfcx.response,'$.queryResult.match.confidence') as intent_confidence_score
  ,TO_JSON(COALESCE(JSON_QUERY(dfcx.response,'$.queryResult.parameters'),JSON_OBJECT())) as session_parameters
  ,${ref('combineWebhookInfo')}(
     COALESCE(JSON_QUERY_ARRAY(dfcx.response,'$.queryResult.webhookDisplayNames'),[])
    ,COALESCE(JSON_QUERY_ARRAY(dfcx.response,'$.queryResult.webhookStatuses'),[])
    ,COALESCE(JSON_QUERY_ARRAY(dfcx.response,'$.queryResult.webhookPayloads'),[])
  ) as webhook
FROM `aminton-sandbox-ps.dfcx.dialogflow_bigquery_export_data` as dfcx
WHERE TRUE
    AND dfcx.request_time > request_time_checkpoint
)
SELECT 
  * EXCEPT(source_page)
  ,COALESCE(source_page, LAG(page_name,1) OVER (PARTITION BY session_id ORDER BY request_time ASC)) as source_page
FROM data_extract
