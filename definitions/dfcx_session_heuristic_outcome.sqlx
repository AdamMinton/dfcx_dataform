config {
    type: "incremental",
    bigquery: {
      partitionBy: "TIMESTAMP_TRUNC(session_start_time, HOUR)",
      updatePartitionFilter: "session_start_time >= TIMESTAMP_SUB(session_start_time_checkpoint, INTERVAL 1 HOUR)",
      requirePartitionFilter : true
    },
    uniqueKey: ["session_id"],
    description: "DFCX session heuristic outcome",
}

WITH
dfcx_transcript AS (
  SELECT
      session_start_time,
      session_id,
      response_id,
      request_time,
      insert_time,
      response_messages
  FROM ${ref("dfcx_transcript")} AS dfcx_transcript
  WHERE TRUE
    AND session_start_time >= session_start_time_checkpoint
)
SELECT 
  session_start_time,
  session_id,
  MAX(insert_time) as latest_insert_time,
  MAX('ESCALATED') as heuristic_outcome
FROM dfcx_transcript
GROUP BY 1,2

pre_operations {
  DECLARE
    insert_time_checkpoint DEFAULT (
    ${
        when(incremental(),
            `SELECT COALESCE(MAX(latest_insert_time),CURRENT_TIMESTAMP()) FROM ${self()} WHERE session_start_time >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)`,
            `SELECT TIMESTAMP(${dataform.projectConfig.vars.backfillDate})`)
    }
    );
  DECLARE 
    session_start_time_checkpoint DEFAULT (
    ${
        when(incremental(),
            `SELECT COALESCE(MIN(session_start_time),CURRENT_TIMESTAMP()) FROM ${ref("dfcx_transcript")} WHERE session_start_time >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 36 HOUR) AND insert_time > insert_time_checkpoint`,
            `SELECT TIMESTAMP(${dataform.projectConfig.vars.backfillDate})`)
    }
    )
}