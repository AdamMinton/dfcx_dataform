config {
    type: "incremental",
    bigquery: {
        partitionBy: "DATE(session_start_time)"
    },
    assertions: {
        uniqueKey: ["session_id", "position", "step"],
        nonNull: ["session_id", "position", "step"]
    },
    description: "Contains the status of the webhook if it soft failed",
}

WITH
  extract_status_values AS (
  SELECT
    session_id,
    position,
    step,
    request_time,
    session_start_time,
    JSON_VALUE(session_parameters_updated,'$.BillDisputeTypeStatus') AS BillDisputeTypeStatus,
    JSON_VALUE(session_parameters_updated,'$.StorePaymentProfileStatus') AS StorePaymentProfileStatus,
    JSON_VALUE(session_parameters_updated,'$.CdeDecisionStatus') AS CdeDecisionStatus,
    JSON_VALUE(session_parameters_updated,'$.uploadStatus') AS uploadStatus,
    JSON_VALUE(session_parameters_updated,'$.DisputeChargeStatusCode') AS DisputeChargeStatusCode,
    JSON_VALUE(session_parameters_updated,'$.PaymentPlanAutopayStatus') AS PaymentPlanAutopayStatus,
    JSON_VALUE(session_parameters_updated,'$.BillConfusionBillDisplayStatus') AS BillConfusionBillDisplayStatus,
    JSON_VALUE(session_parameters_updated,'$.BillPaymentStatus') AS BillPaymentStatus,
    JSON_VALUE(session_parameters_updated,'$.AutopayStatus') AS AutopayStatus,
    JSON_VALUE(session_parameters_updated,'$.BillConfusionTier2Status') AS BillConfusionTier2Status,
    JSON_VALUE(session_parameters_updated,'$.BillDisputeSubmitChargeStatus') AS BillDisputeSubmitChargeStatus,
    JSON_VALUE(session_parameters_updated,'$.APIStatus') AS APIStatus,
    JSON_VALUE(session_parameters_updated,'$.TradeInStatusList') AS TradeInStatusList,
    JSON_VALUE(session_parameters_updated,'$.BillConfusionDisplayStatus') AS BillConfusionDisplayStatus,
    JSON_VALUE(session_parameters_updated,'$.BillConfusionStatus') AS BillConfusionStatus,
    JSON_VALUE(session_parameters_updated,'$.MobilityTCContractStatus') AS MobilityTCContractStatus,
    JSON_VALUE(session_parameters_updated,'$.SubmissionStatus') AS SubmissionStatus,
    JSON_VALUE(session_parameters_updated,'$.downloadStatus') AS downloadStatus,
    JSON_VALUE(session_parameters_updated,'$.SchedulePaymentStatus') AS SchedulePaymentStatus,
    JSON_VALUE(session_parameters_updated,'$.BillPendingCreditStatus') AS BillPendingCreditStatus,
    JSON_VALUE(session_parameters_updated,'$.BillConfusionFeesStatus') AS BillConfusionFeesStatus,
    JSON_VALUE(session_parameters_updated,'$.BillActiveCreditAndPromotionStatus') AS BillActiveCreditAndPromotionStatus,
    JSON_VALUE(session_parameters_updated,'$.SmsStatusMsg') AS SmsStatusMsg,
    JSON_VALUE(session_parameters_updated,'$.ProcessPaymentStatus') AS ProcessPaymentStatus,
    JSON_VALUE(session_parameters_updated,'$.ValidateCCStatus') AS ValidateCCStatus,
    JSON_VALUE(session_parameters_updated,'$.SmsStatusCode') AS SmsStatusCode,
    JSON_VALUE(session_parameters_updated,'$.daasStatusCode') AS daasStatusCode,
    JSON_VALUE(session_parameters_updated,'$.UpdateContactInfoStatus') AS UpdateContactInfoStatus,
    JSON_VALUE(session_parameters_updated,'$.daasStatus') AS daasStatus,
    JSON_VALUE(session_parameters_updated,'$.result') AS result
  FROM
    ${ref("dfcx_transcript")} AS a,
    UNNEST(a.webhooks) AS webhook
  WHERE
    TRUE
    AND request_time > request_time_checkpoint ),
  determine_success AS (
  SELECT
    *,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillDisputeTypeStatus),r'failure|false') THEN FALSE
      WHEN BillDisputeTypeStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillDisputeTypeStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(StorePaymentProfileStatus),r'failure|false') THEN FALSE
      WHEN StorePaymentProfileStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS StorePaymentProfileStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(CdeDecisionStatus),r'failure|false') THEN FALSE
      WHEN CdeDecisionStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS CdeDecisionStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(uploadStatus),r'failure|false') THEN FALSE
      WHEN uploadStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS uploadStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(DisputeChargeStatusCode),r'failure|false') THEN FALSE
      WHEN DisputeChargeStatusCode IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS DisputeChargeStatusCode_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(PaymentPlanAutopayStatus),r'failure|false') THEN FALSE
      WHEN PaymentPlanAutopayStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS PaymentPlanAutopayStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillConfusionBillDisplayStatus),r'failure|false') THEN FALSE
      WHEN BillConfusionBillDisplayStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillConfusionBillDisplayStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillPaymentStatus),r'failure|false') THEN FALSE
      WHEN BillPaymentStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillPaymentStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(AutopayStatus),r'failure|false') THEN FALSE
      WHEN AutopayStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS AutopayStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillConfusionTier2Status),r'failure|false') THEN FALSE
      WHEN BillConfusionTier2Status IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillConfusionTier2Status_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillDisputeSubmitChargeStatus),r'failure|false') THEN FALSE
      WHEN BillDisputeSubmitChargeStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillDisputeSubmitChargeStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(APIStatus),r'failure|false') THEN FALSE
      WHEN APIStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS APIStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(TradeInStatusList),r'failure|false') THEN FALSE
      WHEN TradeInStatusList IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS TradeInStatusList_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillConfusionDisplayStatus),r'failure|false') THEN FALSE
      WHEN BillConfusionDisplayStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillConfusionDisplayStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillConfusionStatus),r'failure|false') THEN FALSE
      WHEN BillConfusionStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillConfusionStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(MobilityTCContractStatus),r'failure|false') THEN FALSE
      WHEN MobilityTCContractStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS MobilityTCContractStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(SubmissionStatus),r'failure|false') THEN FALSE
      WHEN SubmissionStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS SubmissionStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(downloadStatus),r'failure|false') THEN FALSE
      WHEN downloadStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS downloadStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(SchedulePaymentStatus),r'failure|false') THEN FALSE
      WHEN SchedulePaymentStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS SchedulePaymentStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillPendingCreditStatus),r'failure|false') THEN FALSE
      WHEN BillPendingCreditStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillPendingCreditStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillConfusionFeesStatus),r'failure|false') THEN FALSE
      WHEN BillConfusionFeesStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillConfusionFeesStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(BillActiveCreditAndPromotionStatus),r'failure|false') THEN FALSE
      WHEN BillActiveCreditAndPromotionStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS BillActiveCreditAndPromotionStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(SmsStatusMsg),r'failure|false') THEN FALSE
      WHEN SmsStatusMsg IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS SmsStatusMsg_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(ProcessPaymentStatus),r'failure|false') THEN FALSE
      WHEN ProcessPaymentStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS ProcessPaymentStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(ValidateCCStatus),r'failure|false') THEN FALSE
      WHEN ValidateCCStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS ValidateCCStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(SmsStatusCode),r'failure|false') THEN FALSE
      WHEN SmsStatusCode IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS SmsStatusCode_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(daasStatusCode),r'failure|false') THEN FALSE
      WHEN daasStatusCode IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS daasStatusCode_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(UpdateContactInfoStatus),r'failure|false') THEN FALSE
      WHEN UpdateContactInfoStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS UpdateContactInfoStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(daasStatus),r'failure|false') THEN FALSE
      WHEN daasStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS daasStatus_did_pass,
    CASE
      WHEN REGEXP_CONTAINS(LOWER(result),r'failure|false|error') THEN FALSE
      WHEN daasStatus IS NOT NULL THEN TRUE
    ELSE
    NULL
  END
    AS result_did_pass
  FROM
    extract_status_values ),
  final_flag AS (
  SELECT
    *,
    CASE
    --if entire row of statuses is null
      WHEN BillDisputeTypeStatus_did_pass IS NULL AND StorePaymentProfileStatus_did_pass IS NULL AND CdeDecisionStatus_did_pass IS NULL AND uploadStatus_did_pass IS NULL AND DisputeChargeStatusCode_did_pass IS NULL AND PaymentPlanAutopayStatus_did_pass IS NULL AND BillConfusionBillDisplayStatus_did_pass IS NULL AND BillPaymentStatus_did_pass IS NULL AND AutopayStatus_did_pass IS NULL
    --AND BillConfusionTier2Status_did_pass IS NULL
    AND BillDisputeSubmitChargeStatus_did_pass IS NULL AND APIStatus_did_pass IS NULL AND TradeInStatusList_did_pass IS NULL AND BillConfusionDisplayStatus_did_pass IS NULL AND BillConfusionStatus_did_pass IS NULL AND MobilityTCContractStatus_did_pass IS NULL AND SubmissionStatus_did_pass IS NULL AND downloadStatus_did_pass IS NULL AND SchedulePaymentStatus_did_pass IS NULL AND BillPendingCreditStatus_did_pass IS NULL AND BillConfusionFeesStatus_did_pass IS NULL AND BillActiveCreditAndPromotionStatus_did_pass IS NULL AND SmsStatusMsg_did_pass IS NULL AND ProcessPaymentStatus_did_pass IS NULL AND ValidateCCStatus_did_pass IS NULL AND SmsStatusCode_did_pass IS NULL AND daasStatusCode_did_pass IS NULL AND UpdateContactInfoStatus_did_pass IS NULL AND daasStatus_did_pass IS NULL AND result_did_pass IS NULL THEN NULL
    --if any failed then failed
      WHEN BillDisputeTypeStatus_did_pass = FALSE
    OR StorePaymentProfileStatus_did_pass = FALSE
    OR CdeDecisionStatus_did_pass = FALSE
    OR uploadStatus_did_pass = FALSE
    OR DisputeChargeStatusCode_did_pass = FALSE
    OR PaymentPlanAutopayStatus_did_pass = FALSE
    OR BillConfusionBillDisplayStatus_did_pass = FALSE
    OR BillPaymentStatus_did_pass = FALSE
    OR AutopayStatus_did_pass = FALSE
    --OR BillConfusionTier2Status_did_pass = FALSE
    OR BillDisputeSubmitChargeStatus_did_pass = FALSE
    OR APIStatus_did_pass = FALSE
    OR TradeInStatusList_did_pass = FALSE
    OR BillConfusionDisplayStatus_did_pass = FALSE
    OR BillConfusionStatus_did_pass = FALSE
    OR MobilityTCContractStatus_did_pass = FALSE
    OR SubmissionStatus_did_pass = FALSE
    OR downloadStatus_did_pass = FALSE
    OR SchedulePaymentStatus_did_pass = FALSE
    OR BillPendingCreditStatus_did_pass = FALSE
    OR BillConfusionFeesStatus_did_pass = FALSE
    OR BillActiveCreditAndPromotionStatus_did_pass = FALSE
    OR SmsStatusMsg_did_pass = FALSE
    OR ProcessPaymentStatus_did_pass = FALSE
    OR ValidateCCStatus_did_pass = FALSE
    OR SmsStatusCode_did_pass = FALSE
    OR daasStatusCode_did_pass = FALSE
    OR UpdateContactInfoStatus_did_pass = FALSE
    OR daasStatus_did_pass = FALSE
    OR result_did_pass = FALSE THEN FALSE
    --then passed
    ELSE
    TRUE
  END
    AS did_row_pass
  FROM
    determine_success )
SELECT
  *
FROM
  final_flag

pre_operations {
  DECLARE
    request_time_checkpoint DEFAULT (
    ${
        when(incremental(),
            `select max(request_time) from ${self()}`,
            `select timestamp("2000-01-01")`)
    }
    );
}
