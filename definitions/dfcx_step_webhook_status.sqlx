config {
    type: "incremental",
    bigquery: {
        partitionBy: "TIMESTAMP_TRUNC(session_start_time, HOUR)",
        requirePartitionFilter : true
    },
    description: "Contains the status of the webhook if it soft failed",
}

WITH
extract_status_values AS (
  SELECT
    session_start_time,
    session_id,
    response_id,
    request_time,
    insert_time,
    step,
    JSON_VALUE(session_parameters_updated,'$.status') AS status
  FROM ${ref("dfcx_transcript")} AS dfcx_transcript
    INNER JOIN UNNEST(dfcx_transcript.webhooks) AS webhook
  WHERE TRUE
    AND insert_time > insert_time_checkpoint
    AND session_start_time >= session_start_time_checkpoint
),
determine_success AS (
  SELECT
    *,
    CASE WHEN REGEXP_CONTAINS(LOWER(status),r'failure|false') THEN FALSE
      WHEN status IS NOT NULL THEN TRUE
      ELSE NULL END AS status_did_pass
  FROM extract_status_values
  WHERE TRUE  
),
final_flag AS (
  SELECT
    *,
    CASE WHEN status_did_pass = FALSE THEN FALSE ELSE TRUE END as did_row_pass
  FROM
    determine_success
  WHERE TRUE
)
SELECT
  *
FROM final_flag

pre_operations {
  DECLARE
    insert_time_checkpoint DEFAULT (
    ${
        when(incremental(),
            `SELECT COALESCE(MAX(insert_time),CURRENT_TIMESTAMP()) FROM ${self()} WHERE session_start_time >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)`,
            `SELECT TIMESTAMP(${dataform.projectConfig.vars.backfillDate})`)
    }
    );
  DECLARE 
    session_start_time_checkpoint DEFAULT (
    ${
        when(incremental(),
            `SELECT COALESCE(MIN(session_start_time),CURRENT_TIMESTAMP()) FROM ${ref("dfcx_transcript")} WHERE session_start_time >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 36 HOUR) AND insert_time > insert_time_checkpoint`,
            `SELECT TIMESTAMP(${dataform.projectConfig.vars.backfillDate})`)
    }
    )
}